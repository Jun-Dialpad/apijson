{
  "basePath": "/", 
  "consumes": [
    "application/json"
  ], 
  "definitions": {
    "ProtosApiKeyApiKeyProto": {
      "properties": {
        "access_token": {
          "type": "string"
        }, 
        "access_type": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "target_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "target_type": {
          "enum": [
            "department", 
            "office", 
            "callcenter", 
            "user", 
            "room", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string"
        }, 
        "token_type": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallActiveCallProto": {
      "properties": {
        "call_state": {
          "type": "string"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "is_recording": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallCallbackMessage": {
      "properties": {
        "call_center_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of a call center that will be used to fulfill the callback."
        }, 
        "phone_number": {
          "type": "string", 
          "description": "The e164-formatted number to call back."
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallCallbackProto": {
      "properties": {
        "position": {
          "format": "int64", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallEventSubscriptionCallEventSubscriptionCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Call event subscription proto", 
          "items": {
            "$ref": "#/definitions/ProtosCallEventSubscriptionCallEventSubscriptionProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallEventSubscriptionCallEventSubscriptionProto": {
      "properties": {
        "call_states": {
          "items": {
            "enum": [
              "preanswer", 
              "calling", 
              "ringing", 
              "connected", 
              "merged", 
              "hold", 
              "queued", 
              "voicemail", 
              "eavesdrop", 
              "monitor", 
              "barge", 
              "hangup", 
              "blocked", 
              "admin", 
              "parked", 
              "takeover", 
              "all", 
              "postcall", 
              "transcription", 
              "recording"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "The call event subscription's list of call states."
        }, 
        "enabled": {
          "default": true, 
          "type": "boolean", 
          "description": "Whether or not the call event subscription is enabled."
        }, 
        "group_calls_only": {
          "type": "boolean", 
          "description": "Call event subscription for group calls only."
        }, 
        "id": {
          "type": "string", 
          "description": "The call event subscription's hook id."
        }, 
        "signature": {
          "$ref": "#/definitions/ProtosCallEventSubscriptionCallEventSubscriptionSignatureProto", 
          "description": "Call event subscription's signature containing the secret."
        }, 
        "url": {
          "type": "string", 
          "description": "The call event subscription's url."
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallEventSubscriptionCallEventSubscriptionSignatureProto": {
      "properties": {
        "algo": {
          "type": "string"
        }, 
        "secret": {
          "type": "string"
        }, 
        "type": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallEventSubscriptionCreateOrUpdateCallEventSubscriptionEndpoint": {
      "properties": {
        "call_states": {
          "items": {
            "enum": [
              "preanswer", 
              "calling", 
              "ringing", 
              "connected", 
              "merged", 
              "hold", 
              "queued", 
              "voicemail", 
              "eavesdrop", 
              "monitor", 
              "barge", 
              "hangup", 
              "blocked", 
              "admin", 
              "parked", 
              "takeover", 
              "all", 
              "postcall", 
              "transcription", 
              "recording"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "The call event subscription's list of call states."
        }, 
        "enabled": {
          "default": true, 
          "type": "boolean", 
          "description": "Whether or not the call event subscription is enabled."
        }, 
        "group_calls_only": {
          "type": "boolean", 
          "description": "Call event subscription for group calls only."
        }, 
        "secret": {
          "type": "string", 
          "description": "The call event subscription's signature secret."
        }, 
        "target_id": {
          "format": "int64", 
          "type": "string", 
          "description": "ID of the target"
        }, 
        "target_type": {
          "enum": [
            "department", 
            "office", 
            "callcenter", 
            "user", 
            "room", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string", 
          "description": "Type of the target"
        }, 
        "url": {
          "type": "string", 
          "description": "The call event subscription's url."
        }
      }, 
      "required": [
        "url"
      ], 
      "type": "object"
    }, 
    "ProtosCallInitiateCallMessage": {
      "properties": {
        "custom_data": {
          "type": "string", 
          "description": "Extra data to associate with the call."
        }, 
        "group_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of a group that will be used to initiate the call."
        }, 
        "group_type": {
          "enum": [
            "office", 
            "department", 
            "callcenter", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The type of a group that will be used to initiate the call."
        }, 
        "outbound_caller_id": {
          "type": "string", 
          "description": "The e164-formatted number shown to the call recipient (or \"blocked\").                              If set to \"blocked\", the recipient will receive a call from                              \"unknown caller\""
        }, 
        "phone_number": {
          "type": "string", 
          "description": "The e164-formatted number to call."
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallInitiatedCallProto": {
      "properties": {
        "device": {
          "$ref": "#/definitions/ProtosUserdeviceUserDeviceProto", 
          "description": "Representation of Device entities"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCallUpdateActiveCallMessage": {
      "properties": {
        "is_recording": {
          "type": "boolean", 
          "description": "Whether or not recording should be enabled."
        }, 
        "play_message": {
          "default": true, 
          "type": "boolean", 
          "description": "Whether or not to play a message to indicate the call is being recorded (or recording has stopped)."
        }, 
        "recording_type": {
          "default": "user", 
          "enum": [
            "user", 
            "group", 
            "all"
          ], 
          "type": "string", 
          "description": "For group calls (call centers, departments, etc.), whether or not to toggle recording for the operator call (personal recording), the group call (department recording), or both."
        }
      }, 
      "type": "object"
    }, 
    "ProtosCompanyCompanyProto": {
      "properties": {
        "account_type": {
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosCompanyCreateCompanyMessage": {
      "properties": {
        "account_type": {
          "enum": [
            "default", 
            "enterprise", 
            "pro", 
            "free"
          ], 
          "type": "string", 
          "description": "Company pricing tier."
        }, 
        "admin_email": {
          "type": "string", 
          "description": "Email address of the company administrator."
        }, 
        "country": {
          "type": "string", 
          "description": "Primary country of the company."
        }, 
        "domain": {
          "type": "string", 
          "description": "Domain name of user emails."
        }, 
        "name": {
          "type": "string", 
          "description": "Company display name."
        }
      }, 
      "required": [
        "account_type", 
        "country", 
        "domain", 
        "name"
      ], 
      "type": "object"
    }, 
    "ProtosCompanyCreateCompanyResponse": {
      "properties": {
        "api_key": {
          "$ref": "#/definitions/ProtosApiKeyApiKeyProto", 
          "description": "API key details."
        }, 
        "company": {
          "$ref": "#/definitions/ProtosCompanyCompanyProto", 
          "description": "Company details."
        }, 
        "office": {
          "$ref": "#/definitions/ProtosOfficeOfficeProto", 
          "description": "Full response body for get office operations."
        }
      }, 
      "type": "object"
    }, 
    "ProtosDeskphoneCreateDeskPhone": {
      "properties": {
        "mac_address": {
          "type": "string", 
          "description": "MAC address of the desk phone."
        }, 
        "name": {
          "type": "string", 
          "description": "Name of the desk phone."
        }, 
        "type": {
          "enum": [
            "obi", 
            "polycom", 
            "sip", 
            "mini", 
            "audiocodes", 
            "yealink"
          ], 
          "type": "string", 
          "description": "Type (vendor) of the desk phone. Use sip for generic types."
        }
      }, 
      "required": [
        "mac_address", 
        "name", 
        "type"
      ], 
      "type": "object"
    }, 
    "ProtosDeskphoneDeskPhone": {
      "properties": {
        "byod": {
          "type": "boolean"
        }, 
        "device_model": {
          "type": "string"
        }, 
        "firmware_version": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "mac_address": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "owner_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "owner_type": {
          "enum": [
            "user", 
            "room"
          ], 
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "phone_number": {
          "type": "string"
        }, 
        "port": {
          "format": "int64", 
          "type": "string"
        }, 
        "realm": {
          "type": "string"
        }, 
        "ring_notification": {
          "type": "boolean"
        }, 
        "sip_transport_type": {
          "enum": [
            "tls"
          ], 
          "type": "string"
        }, 
        "type": {
          "enum": [
            "obi", 
            "polycom", 
            "sip", 
            "mini", 
            "audiocodes", 
            "yealink"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosDeskphoneDeskPhoneCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Public representation of a desk phone.", 
          "items": {
            "$ref": "#/definitions/ProtosDeskphoneDeskPhone"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupDtmfMapping": {
      "properties": {
        "input": {
          "type": "string"
        }, 
        "options": {
          "$ref": "#/definitions/ProtosGroupDtmfOptions", 
          "description": "DTMF routing options."
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupDtmfOptions": {
      "properties": {
        "action": {
          "enum": [
            "voicemail", 
            "menu", 
            "department", 
            "bridge_target", 
            "extension", 
            "person", 
            "directory", 
            "message", 
            "operator", 
            "disabled"
          ], 
          "type": "string"
        }, 
        "action_target_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "action_target_type": {
          "enum": [
            "office", 
            "department", 
            "callcenter", 
            "contact", 
            "user", 
            "room", 
            "contactgroup", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupGroupCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Full response body for get group (department, call center) operations.", 
          "items": {
            "$ref": "#/definitions/ProtosGroupGroupProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupGroupProto": {
      "properties": {
        "country": {
          "type": "string"
        }, 
        "first_action": {
          "enum": [
            "operators", 
            "menu"
          ], 
          "type": "string"
        }, 
        "friday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "monday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string"
        }, 
        "no_operators_action": {
          "enum": [
            "voicemail", 
            "menu", 
            "department", 
            "bridge_target", 
            "extension", 
            "person", 
            "directory", 
            "message", 
            "operator", 
            "disabled"
          ], 
          "type": "string"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "ring_seconds": {
          "format": "int64", 
          "type": "string"
        }, 
        "routing_options": {
          "$ref": "#/definitions/ProtosGroupRoutingOptions", 
          "description": "Group routing options."
        }, 
        "saturday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "state": {
          "enum": [
            "active", 
            "cancelled", 
            "suspended", 
            "pending", 
            "deleted"
          ], 
          "type": "string"
        }, 
        "sunday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "thursday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "tuesday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "wednesday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupOperatorCollection": {
      "properties": {
        "rooms": {
          "description": "Full response body for get room operations.", 
          "items": {
            "$ref": "#/definitions/ProtosRoomRoomProto"
          }, 
          "type": "array"
        }, 
        "users": {
          "description": "Full response body for get user operations.", 
          "items": {
            "$ref": "#/definitions/ProtosUserUserProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupRoutingOptions": {
      "properties": {
        "closed": {
          "$ref": "#/definitions/ProtosGroupRoutingOptionsInner", 
          "description": "Group routing options for open or closed states."
        }, 
        "open": {
          "$ref": "#/definitions/ProtosGroupRoutingOptionsInner", 
          "description": "Group routing options for open or closed states."
        }
      }, 
      "type": "object"
    }, 
    "ProtosGroupRoutingOptionsInner": {
      "properties": {
        "action": {
          "enum": [
            "voicemail", 
            "menu", 
            "department", 
            "bridge_target", 
            "extension", 
            "person", 
            "directory", 
            "message", 
            "operator", 
            "disabled"
          ], 
          "type": "string"
        }, 
        "action_target_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "action_target_type": {
          "enum": [
            "office", 
            "department", 
            "callcenter", 
            "contact", 
            "user", 
            "room", 
            "contactgroup", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string"
        }, 
        "dtmf": {
          "items": {
            "$ref": "#/definitions/ProtosGroupDtmfMapping"
          }, 
          "type": "array"
        }, 
        "operator_routing": {
          "enum": [
            "simultaneous", 
            "longestidle", 
            "fixedorder", 
            "roundrobin", 
            "mostskilled", 
            "random"
          ], 
          "type": "string"
        }, 
        "try_dial_operators": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "ProtosNumberAssignNumberMessage": {
      "properties": {
        "area_code": {
          "type": "string", 
          "description": "An area code to attempt to use if a reserved pool number is not provided. If no area code is provided, the office's area code will be used."
        }, 
        "number": {
          "type": "string", 
          "description": "A phone number from the reserved pool to attempt to assign."
        }
      }, 
      "type": "object"
    }, 
    "ProtosNumberCreateNumberMessage": {
      "properties": {
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "source": {
          "enum": [
            "service_titan"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosNumberNumberCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Phone number details.", 
          "items": {
            "$ref": "#/definitions/ProtosNumberNumberProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosNumberNumberProto": {
      "properties": {
        "area_code": {
          "type": "string"
        }, 
        "company_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "deleted": {
          "type": "boolean"
        }, 
        "number": {
          "type": "string"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "status": {
          "enum": [
            "available", 
            "pending", 
            "office", 
            "department", 
            "call_center", 
            "user", 
            "room", 
            "porting", 
            "call_router", 
            "dynamic_caller"
          ], 
          "type": "string"
        }, 
        "target_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "target_type": {
          "enum": [
            "department", 
            "office", 
            "callcenter", 
            "user", 
            "room", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string"
        }, 
        "type": {
          "enum": [
            "local", 
            "tollfree", 
            "softbank", 
            "free"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosNumberUnassignNumberMessage": {
      "properties": {
        "number": {
          "type": "string", 
          "description": "A phone number (e164 format)."
        }
      }, 
      "required": [
        "number"
      ], 
      "type": "object"
    }, 
    "ProtosOfficeOfficeCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Full response body for get office operations.", 
          "items": {
            "$ref": "#/definitions/ProtosOfficeOfficeProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosOfficeOfficeProto": {
      "properties": {
        "country": {
          "type": "string"
        }, 
        "first_action": {
          "enum": [
            "operators", 
            "menu"
          ], 
          "type": "string"
        }, 
        "friday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "monday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string"
        }, 
        "no_operators_action": {
          "enum": [
            "voicemail", 
            "menu", 
            "department", 
            "bridge_target", 
            "extension", 
            "person", 
            "directory", 
            "message", 
            "operator", 
            "disabled"
          ], 
          "type": "string"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "office_settings": {
          "$ref": "#/definitions/ProtosOfficeOfficeSettings"
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "ring_seconds": {
          "format": "int64", 
          "type": "string"
        }, 
        "routing_options": {
          "$ref": "#/definitions/ProtosGroupRoutingOptions", 
          "description": "Group routing options."
        }, 
        "saturday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "state": {
          "enum": [
            "active", 
            "cancelled", 
            "suspended", 
            "pending", 
            "deleted"
          ], 
          "type": "string"
        }, 
        "sunday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "thursday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "tuesday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "wednesday_hours": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosOfficeOfficeSettings": {
      "properties": {
        "allow_device_guest_login": {
          "type": "boolean"
        }, 
        "block_caller_id_disabled": {
          "type": "boolean"
        }, 
        "bridged_target_recording_allowed": {
          "type": "boolean"
        }, 
        "disable_desk_phone_self_provision": {
          "type": "boolean"
        }, 
        "disable_ivr_voicemail": {
          "type": "boolean"
        }, 
        "no_recording_message_on_user_calls": {
          "type": "boolean"
        }, 
        "set_caller_id_disabled": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "ProtosPlanAdjustLicensesProto": {
      "properties": {
        "fax_line_delta": {
          "format": "int64", 
          "type": "string", 
          "description": "Number of fax line licenses to increment."
        }
      }, 
      "type": "object"
    }, 
    "ProtosPlanPlanProto": {
      "properties": {
        "fax_lines": {
          "format": "int64", 
          "type": "string"
        }, 
        "group_lines": {
          "format": "int64", 
          "type": "string"
        }, 
        "room_lines": {
          "format": "int64", 
          "type": "string"
        }, 
        "tollfree_group_lines": {
          "format": "int64", 
          "type": "string"
        }, 
        "tollfree_room_lines": {
          "format": "int64", 
          "type": "string"
        }, 
        "user_lines": {
          "format": "int64", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosRoomCreateInternationalPinProto": {
      "properties": {
        "customer_ref": {
          "type": "string", 
          "description": "An identifier to be printed in the usage summary. Typically used for identifying the person who requested the PIN."
        }
      }, 
      "type": "object"
    }, 
    "ProtosRoomCreateRoomMessage": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The room's name"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The office's id."
        }
      }, 
      "required": [
        "name", 
        "office_id"
      ], 
      "type": "object"
    }, 
    "ProtosRoomInternationalPinProto": {
      "properties": {
        "customer_ref": {
          "type": "string"
        }, 
        "expires_on": {
          "format": "date-time", 
          "type": "string"
        }, 
        "pin": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosRoomRoomCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Full response body for get room operations.", 
          "items": {
            "$ref": "#/definitions/ProtosRoomRoomProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosRoomRoomProto": {
      "properties": {
        "company_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "image_url": {
          "type": "string"
        }, 
        "is_free": {
          "type": "boolean"
        }, 
        "is_on_duty": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "state": {
          "enum": [
            "active", 
            "cancelled", 
            "suspended", 
            "pending", 
            "deleted"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosRoomUpdateRoomMessage": {
      "properties": {
        "name": {
          "type": "string", 
          "description": "The room's name"
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "A list of all phone numbers assigned to the room. Numbers can be re-ordered or removed from this list to unassign them."
        }
      }, 
      "type": "object"
    }, 
    "ProtosSmsSMSProto": {
      "properties": {
        "contact_id": {
          "type": "string"
        }, 
        "created_date": {
          "format": "date-time", 
          "type": "string"
        }, 
        "direction": {
          "enum": [
            "inbound", 
            "outbound"
          ], 
          "type": "string"
        }, 
        "from_number": {
          "type": "string"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "message_status": {
          "enum": [
            "success", 
            "failed", 
            "pending"
          ], 
          "type": "string"
        }, 
        "target_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "target_type": {
          "enum": [
            "department", 
            "office", 
            "callcenter", 
            "user", 
            "room", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string"
        }, 
        "text": {
          "type": "string"
        }, 
        "to_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "user_id": {
          "format": "int64", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosSmsSendSMSMessage": {
      "properties": {
        "sender_group_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of an office, department, or call center that the User should send the message on behalf of."
        }, 
        "sender_group_type": {
          "enum": [
            "office", 
            "department", 
            "callcenter", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The ID type (i.e. office, department, or callcenter)."
        }, 
        "text": {
          "type": "string", 
          "description": "The contents of the message that should be sent."
        }, 
        "to_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Up to 10 E164-formatted phone numbers who should receive the SMS."
        }, 
        "user_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of the user who should be the sender of the SMS."
        }
      }, 
      "required": [
        "text", 
        "user_id"
      ], 
      "type": "object"
    }, 
    "ProtosStatsProcessStatsMessage": {
      "properties": {
        "coaching_group": {
          "type": "boolean", 
          "description": "Whether or not the the statistics should be for trainees of the coach with the given target_id."
        }, 
        "days_ago_end": {
          "default": 30, 
          "format": "int64", 
          "type": "string", 
          "description": "End of the date range to get statistics for. This is the number of days to look back relative to the current day. Used in conjunction with days_ago_start to specify a range."
        }, 
        "days_ago_start": {
          "default": 1, 
          "format": "int64", 
          "type": "string", 
          "description": "Start of the date range to get statistics for. This is the number of days to look back relative to the current day. Used in conjunction with days_ago_end to specify a range."
        }, 
        "export_type": {
          "enum": [
            "stats", 
            "records"
          ], 
          "type": "string", 
          "description": "Whether to return aggregated statistics (stats), or individual rows for each record (records)."
        }, 
        "is_today": {
          "type": "boolean", 
          "description": "Whether or not the statistics are for the current day. days_ago_start and days_ago_end are ignored if this is passed in."
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string", 
          "description": "ID of the office to get statistics for. If a target_id and target_type are passed in this value is ignored and instead the target is used."
        }, 
        "stat_type": {
          "enum": [
            "calls", 
            "texts", 
            "voicemails", 
            "recordings", 
            "onduty", 
            "csat", 
            "dispositions"
          ], 
          "type": "string", 
          "description": "The type of statistics to be returned."
        }, 
        "target_id": {
          "format": "int64", 
          "type": "string", 
          "description": "ID of the target"
        }, 
        "target_type": {
          "enum": [
            "department", 
            "office", 
            "callcenter", 
            "user", 
            "room", 
            "staffgroup", 
            "callrouter", 
            "channel", 
            "coachinggroup", 
            "unknown"
          ], 
          "type": "string", 
          "description": "Type of the target"
        }, 
        "timezone": {
          "default": "UTC", 
          "type": "string", 
          "description": "Timezone using a tz database name."
        }
      }, 
      "required": [
        "export_type", 
        "stat_type"
      ], 
      "type": "object"
    }, 
    "ProtosStatsProcessingProto": {
      "properties": {
        "already_started": {
          "type": "boolean"
        }, 
        "request_id": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosStatsStatsProto": {
      "properties": {
        "download_url": {
          "type": "string"
        }, 
        "file_type": {
          "type": "string"
        }, 
        "status": {
          "enum": [
            "processing", 
            "complete"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosTranscriptTranscriptLineProto": {
      "properties": {
        "contact_id": {
          "type": "string", 
          "description": "The ID of the contact who was speaking."
        }, 
        "content": {
          "type": "string", 
          "description": "The transcribed text."
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the call participant who was speaking."
        }, 
        "time": {
          "format": "date-time", 
          "type": "string", 
          "description": "The time at which the line was spoken."
        }, 
        "type": {
          "enum": [
            "moment", 
            "transcript"
          ], 
          "type": "string"
        }, 
        "user_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of the user who was speaking."
        }
      }, 
      "type": "object"
    }, 
    "ProtosTranscriptTranscriptProto": {
      "properties": {
        "call_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The call's id."
        }, 
        "lines": {
          "description": "An array of individual lines of the transcript.", 
          "items": {
            "$ref": "#/definitions/ProtosTranscriptTranscriptLineProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosUserCreateUserMessage": {
      "properties": {
        "email": {
          "type": "string", 
          "description": "The user's email."
        }, 
        "first_name": {
          "type": "string", 
          "description": "The user's first name."
        }, 
        "last_name": {
          "type": "string", 
          "description": "The user's last name."
        }, 
        "license": {
          "default": "talk", 
          "enum": [
            "talk", 
            "agents", 
            "lite_support_agents", 
            "lite_lines"
          ], 
          "type": "string", 
          "description": "The user's license type. This affects billing for the user."
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The user's office id."
        }
      }, 
      "required": [
        "email", 
        "office_id"
      ], 
      "type": "object"
    }, 
    "ProtosUserUpdateUserMessage": {
      "properties": {
        "admin_office_ids": {
          "items": {
            "format": "int64", 
            "type": "string"
          }, 
          "type": "array", 
          "description": "The list of admin office IDs. This is used to set the user as an office admin for the offices with the provided IDs."
        }, 
        "emails": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "The user's emails. This can be used to add, remove, or re-order emails. The first email in the list is the user's primary email."
        }, 
        "extension": {
          "type": "string", 
          "description": "The user's new extension number. Extensions are optional in Dialpad and turned off by default. If you want extensions please contact support to enable them."
        }, 
        "first_name": {
          "type": "string", 
          "description": "The user's first name."
        }, 
        "forwarding_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "The user's forwarding numbers."
        }, 
        "is_super_admin": {
          "type": "boolean", 
          "description": "Whether or not the user is a super admin (company level administrator)."
        }, 
        "job_title": {
          "type": "string", 
          "description": "The user's job title."
        }, 
        "last_name": {
          "type": "string", 
          "description": "The user's last name."
        }, 
        "license": {
          "enum": [
            "talk", 
            "agents", 
            "lite_support_agents", 
            "lite_lines"
          ], 
          "type": "string", 
          "description": "The user's license type. Changing this affects billing for the user."
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The user's office id. If provided, the user will be moved to this office. For international offices, the user must not have phone numbers assigned. Once the transfer is complete, your admin can add the phone numbers via the user assign number API. Only supported on paid accounts and there must be enough licenses to transfer the user to the destination office."
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "The user's phone numbers. This can be used to re-order or remove numbers. To assign a new number, use the assign number API instead."
        }, 
        "state": {
          "enum": [
            "active", 
            "suspended"
          ], 
          "type": "string", 
          "description": "The user's state. This is used to suspend or re-activate a user."
        }
      }, 
      "type": "object"
    }, 
    "ProtosUserUserCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Full response body for get user operations.", 
          "items": {
            "$ref": "#/definitions/ProtosUserUserProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosUserUserProto": {
      "properties": {
        "admin_office_ids": {
          "items": {
            "format": "int64", 
            "type": "string"
          }, 
          "type": "array"
        }, 
        "company_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "do_not_disturb": {
          "type": "boolean"
        }, 
        "emails": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "extension": {
          "type": "string"
        }, 
        "first_name": {
          "type": "string"
        }, 
        "forwarding_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "id": {
          "format": "int64", 
          "type": "string"
        }, 
        "image_url": {
          "type": "string"
        }, 
        "is_admin": {
          "type": "boolean"
        }, 
        "is_available": {
          "type": "boolean"
        }, 
        "is_on_duty": {
          "type": "boolean"
        }, 
        "is_online": {
          "type": "boolean"
        }, 
        "is_super_admin": {
          "type": "boolean"
        }, 
        "job_title": {
          "type": "string"
        }, 
        "language": {
          "type": "string"
        }, 
        "last_name": {
          "type": "string"
        }, 
        "license": {
          "enum": [
            "talk", 
            "agents", 
            "lite_support_agents", 
            "lite_lines"
          ], 
          "type": "string"
        }, 
        "location": {
          "type": "string"
        }, 
        "muted": {
          "type": "boolean"
        }, 
        "office_id": {
          "format": "int64", 
          "type": "string"
        }, 
        "phone_numbers": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "state": {
          "enum": [
            "active", 
            "cancelled", 
            "suspended", 
            "pending", 
            "deleted"
          ], 
          "type": "string"
        }, 
        "status_message": {
          "type": "string"
        }, 
        "timezone": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ProtosUserdeviceUserDeviceCollection": {
      "properties": {
        "cursor": {
          "type": "string"
        }, 
        "items": {
          "description": "Representation of Device entities", 
          "items": {
            "$ref": "#/definitions/ProtosUserdeviceUserDeviceProto"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "ProtosUserdeviceUserDeviceProto": {
      "properties": {
        "app_version": {
          "type": "string", 
          "description": "The device firmware version, or Dialpad app version."
        }, 
        "date_created": {
          "format": "date-time", 
          "type": "string", 
          "description": "The time at which this device was created."
        }, 
        "date_registered": {
          "format": "date-time", 
          "type": "string", 
          "description": "The most recent time at which the device registered with the backend."
        }, 
        "date_updated": {
          "format": "date-time", 
          "type": "string", 
          "description": "The most recent time at which the device data was modified."
        }, 
        "display_name": {
          "type": "string", 
          "description": "The name of this device."
        }, 
        "id": {
          "type": "string"
        }, 
        "phone_number": {
          "type": "string", 
          "description": "The phone number associated with this device."
        }, 
        "type": {
          "enum": [
            "android", 
            "iphone", 
            "ipad", 
            "obi", 
            "sip", 
            "polycom", 
            "mini", 
            "audiocodes", 
            "yealink", 
            "packaged_app", 
            "native", 
            "web", 
            "harness", 
            "salesforce", 
            "iframe_zendesk", 
            "iframe_service_titan", 
            "iframe_front", 
            "iframe_salesforce", 
            "proxy"
          ], 
          "type": "string", 
          "description": "The device type."
        }, 
        "user_id": {
          "format": "int64", 
          "type": "string", 
          "description": "The ID of the user who owns the device."
        }
      }, 
      "type": "object"
    }
  }, 
  "host": "dialpad.com", 
  "info": {
    "description": "# Introduction\n\nAdmin API v2 for Dialpad.\n\nRequests and responses from the admin API are provided in the JSON format.\n\n# Pagination\n\nList APIs support a limit and cursor parameter.\n\nThe limit defines the number of results to return. For the first request, pass in a desired limit.\nThe API response will contain a cursor field with a special string. Pass this special string into\nthe next request to retrieve the next page.\n\n# Authentication\n\nAll requests are authenticated via an API key in the query parameter or as a bearer token in the\nAuthorization header.\n\nAn API key can be acquired from the Dialpad admin web portal.\n\nNote: If you received your API key from the Dialpad support team rather than the web portal, the\nuser associated with your key must have company administrator permissions.\n", 
    "title": "api", 
    "version": "v2", 
    "x-logo": {
      "url": "https://storage.cloud.google.com/dialpad_openapi_specs/logo.png", 
      "altText": "Dialpad"
    }
  }, 
  "paths": {
    "/api/v2/callback": {
      "post": {
        "operationId": "CallApi_callback", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosCallCallbackMessage"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallCallbackProto"
            }, 
            "examples": {
              "application/json": {
                "position": "1"
              }
            }
          }
        }, 
        "tags": [
          "callback"
        ], 
        "description": "Requests a call back to a given number by an operator in a given call center. The call back is added to the queue for the call center like a regular call, and a call is initiated when the next operator becomes available. This API respects all existing call center settings, e.g. business / holiday hours and queue settings. This API currently does not allow international call backs. Duplicate call backs for a given number and call center are not allowed. Specific error messages will be provided in case of failure.", 
        "summary": "Request call back."
      }
    }, 
    "/api/v2/callcenters/{id}": {
      "get": {
        "operationId": "CallCenterApi_getCallCenter", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The call center's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupGroupProto"
            }, 
            "examples": {
              "application/json": {
                "routing_options": {
                  "open": {
                    "action_target_type": "department", 
                    "operator_routing": "longestidle", 
                    "dtmf": [
                      {
                        "input": "1", 
                        "options": {
                          "action": "department", 
                          "action_target_id": "4", 
                          "action_target_type": "office"
                        }
                      }
                    ], 
                    "try_dial_operators": true, 
                    "action": "department", 
                    "action_target_id": "6"
                  }, 
                  "closed": {
                    "action": "voicemail", 
                    "try_dial_operators": false, 
                    "operator_routing": "longestidle"
                  }
                }, 
                "name": "Test call center", 
                "first_action": "operators", 
                "monday_hours": [
                  "08:00", 
                  "18:00"
                ], 
                "country": "us", 
                "wednesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "tuesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "friday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "state": "active", 
                "no_operators_action": "voicemail", 
                "thursday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "ring_seconds": "30", 
                "phone_numbers": [
                  "+14155551001"
                ], 
                "saturday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "sunday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "id": "13", 
                "office_id": "4"
              }
            }
          }
        }, 
        "tags": [
          "callcenters"
        ], 
        "description": "Gets a call center by id.", 
        "summary": "Get call center by id"
      }
    }, 
    "/api/v2/callcenters/{id}/operators": {
      "get": {
        "operationId": "CallCenterApi_listOperators", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The call center's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupOperatorCollection"
            }, 
            "examples": {
              "application/json": {
                "users": [
                  {
                    "admin_office_ids": [
                      "4"
                    ], 
                    "is_super_admin": true, 
                    "last_name": "Bot", 
                    "is_admin": true, 
                    "timezone": "US/Pacific", 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "id": "2", 
                    "first_name": "\u30c6\u00c9st", 
                    "forwarding_numbers": [
                      "+14152301358"
                    ], 
                    "office_id": "4", 
                    "muted": false, 
                    "company_id": "3", 
                    "state": "active", 
                    "location": "Mock Location", 
                    "status_message": "Mock Status", 
                    "job_title": "Mock Job Title", 
                    "is_available": true, 
                    "is_online": false, 
                    "emails": [
                      "bot@fuzz-ball.com"
                    ], 
                    "language": "en", 
                    "license": "talk", 
                    "country": "us", 
                    "do_not_disturb": false, 
                    "extension": "20000", 
                    "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                    "is_on_duty": true
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "callcenters"
        ], 
        "description": "Gets operators for a call center.", 
        "summary": "Get operators"
      }
    }, 
    "/api/v2/company": {
      "get": {
        "operationId": "CompanyApi_getCompany", 
        "parameters": [], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCompanyCompanyProto"
            }, 
            "examples": {
              "application/json": {
                "country": "us", 
                "domain": "fuzz-ball.com", 
                "account_type": "default", 
                "id": "3", 
                "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc"
              }
            }
          }
        }, 
        "tags": [
          "company"
        ], 
        "description": "Gets company information.", 
        "summary": "Get company"
      }
    }, 
    "/api/v2/departments/{id}": {
      "get": {
        "operationId": "DepartmentApi_getDepartment", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The department's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupGroupProto"
            }, 
            "examples": {
              "application/json": {
                "routing_options": {
                  "open": {
                    "action_target_type": "department", 
                    "operator_routing": "simultaneous", 
                    "dtmf": [
                      {
                        "input": "1", 
                        "options": {
                          "action": "department", 
                          "action_target_id": "4", 
                          "action_target_type": "office"
                        }
                      }
                    ], 
                    "try_dial_operators": true, 
                    "action": "department", 
                    "action_target_id": "6"
                  }, 
                  "closed": {
                    "action": "voicemail", 
                    "try_dial_operators": false, 
                    "operator_routing": "simultaneous"
                  }
                }, 
                "name": "Sales", 
                "first_action": "operators", 
                "monday_hours": [
                  "08:00", 
                  "18:00"
                ], 
                "country": "us", 
                "wednesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "tuesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "friday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "state": "active", 
                "no_operators_action": "voicemail", 
                "thursday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "ring_seconds": "30", 
                "phone_numbers": [
                  "+14155551001"
                ], 
                "saturday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "sunday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "id": "6", 
                "office_id": "4"
              }
            }
          }
        }, 
        "tags": [
          "departments"
        ], 
        "description": "Gets a department by id.", 
        "summary": "Get department by id"
      }
    }, 
    "/api/v2/departments/{id}/operators": {
      "get": {
        "operationId": "DepartmentApi_listOperators", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The department's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupOperatorCollection"
            }, 
            "examples": {
              "application/json": {
                "rooms": [
                  {
                    "name": "fake-room", 
                    "country": "us", 
                    "company_id": "3", 
                    "is_free": false, 
                    "office_id": "4", 
                    "state": "active", 
                    "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                    "is_on_duty": false, 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "id": "13"
                  }
                ], 
                "users": [
                  {
                    "admin_office_ids": [
                      "4"
                    ], 
                    "is_super_admin": true, 
                    "last_name": "Bot", 
                    "is_admin": true, 
                    "timezone": "US/Pacific", 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "id": "2", 
                    "first_name": "\u30c6\u00c9st", 
                    "forwarding_numbers": [
                      "+14152301358"
                    ], 
                    "office_id": "4", 
                    "muted": false, 
                    "company_id": "3", 
                    "state": "active", 
                    "location": "Mock Location", 
                    "status_message": "Mock Status", 
                    "job_title": "Mock Job Title", 
                    "is_available": true, 
                    "is_online": false, 
                    "emails": [
                      "bot@fuzz-ball.com"
                    ], 
                    "language": "en", 
                    "license": "talk", 
                    "country": "us", 
                    "do_not_disturb": false, 
                    "extension": "20000", 
                    "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                    "is_on_duty": false
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "departments"
        ], 
        "description": "Gets operators for a department.", 
        "summary": "Get operators"
      }
    }, 
    "/api/v2/event-subscriptions/call": {
      "get": {
        "operationId": "CallEventSubscriptionApi_listCallEventSubscriptions", 
        "parameters": [
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "target_id", 
            "type": "string"
          }, 
          {
            "enum": [
              "department", 
              "office", 
              "callcenter", 
              "user", 
              "room", 
              "staffgroup", 
              "callrouter", 
              "channel", 
              "coachinggroup", 
              "unknown"
            ], 
            "in": "query", 
            "name": "target_type", 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallEventSubscriptionCallEventSubscriptionCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "group_calls_only": true, 
                    "enabled": true, 
                    "url": "https://test.com", 
                    "call_states": [
                      "hangup", 
                      "barge", 
                      "recording"
                    ], 
                    "signature": {
                      "secret": "test_secret", 
                      "type": "jwt", 
                      "algo": "HS256"
                    }, 
                    "id": "test_hook_id"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "event"
        ], 
        "description": "Gets all call event subscriptions.", 
        "summary": "Get call event subscriptions"
      }
    }, 
    "/api/v2/event-subscriptions/call/{id}": {
      "delete": {
        "operationId": "CallEventSubscriptionApi_deleteCallEventSubscription", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The call event subscription's hook id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response"
          }
        }, 
        "tags": [
          "event"
        ], 
        "description": "Deletes a call event subscription by id.", 
        "summary": "Delete call event subscription"
      }, 
      "get": {
        "operationId": "CallEventSubscriptionApi_getCallEventSubscription", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The call event subscription's hook id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallEventSubscriptionCallEventSubscriptionProto"
            }, 
            "examples": {
              "application/json": {
                "group_calls_only": true, 
                "enabled": true, 
                "url": "https://test.com", 
                "call_states": [
                  "hangup", 
                  "barge", 
                  "recording"
                ], 
                "signature": {
                  "secret": "test_secret", 
                  "type": "jwt", 
                  "algo": "HS256"
                }, 
                "id": "test_hook_id"
              }
            }
          }
        }, 
        "tags": [
          "event"
        ], 
        "description": "Gets a call event subscription by id.", 
        "summary": "Get call event subscription"
      }, 
      "put": {
        "operationId": "CallEventSubscriptionApi_createOrUpdateCallEventSubscription", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosCallEventSubscriptionCreateOrUpdateCallEventSubscriptionEndpoint"
            }
          }, 
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The call event subscription's hook id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallEventSubscriptionCallEventSubscriptionProto"
            }, 
            "examples": {
              "application/json": {
                "group_calls_only": true, 
                "enabled": true, 
                "url": "https://test.com", 
                "call_states": [
                  "hangup", 
                  "barge", 
                  "recording"
                ], 
                "signature": {
                  "secret": "test_secret", 
                  "type": "jwt", 
                  "algo": "HS256"
                }, 
                "id": "test_hook_id"
              }
            }
          }
        }, 
        "tags": [
          "event"
        ], 
        "description": "Create a call event subscription for your company. Call events will be sent to the provided URL. Each subscription should be created with an id in the URL, which can be used to get and delete the subscription in the future. If a secret is provided, call events will be encoded and signed in the JWT format using the shared secret with the HS256 algorithm. The JWT payload should be decoded and the signature verified to ensure that the event came from Dialpad. If no secret is provided, unencoded events will be sent in the JSON format. It is recommended to provide a secret so that you can verify the authenticity of the event. Call states can be used to limit the states for which call events are sent. Use ['all'] to get events for all states. A target_type and target_id may optionally be provided to scope the events only to calls to/from that target.", 
        "summary": "Create event subscription"
      }
    }, 
    "/api/v2/numbers": {
      "get": {
        "operationId": "NumberApi_listNumbers", 
        "parameters": [
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }, 
          {
            "in": "query", 
            "name": "status", 
            "type": "string", 
            "description": "Status to filter by."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "status": "office", 
                    "area_code": "415", 
                    "target_id": "4", 
                    "company_id": "3", 
                    "number": "+14155551000", 
                    "office_id": "4", 
                    "type": "local", 
                    "target_type": "office"
                  }, 
                  {
                    "status": "user", 
                    "area_code": "415", 
                    "target_id": "2", 
                    "company_id": "3", 
                    "number": "+14155551001", 
                    "office_id": "4", 
                    "type": "local", 
                    "target_type": "user"
                  }, 
                  {
                    "status": "available", 
                    "area_code": "415", 
                    "company_id": "3", 
                    "number": "+14155551002", 
                    "office_id": "4", 
                    "type": "local"
                  }, 
                  {
                    "status": "available", 
                    "area_code": "415", 
                    "company_id": "3", 
                    "number": "+14155551003", 
                    "office_id": "4", 
                    "type": "local"
                  }, 
                  {
                    "status": "available", 
                    "area_code": "415", 
                    "company_id": "3", 
                    "number": "+14155551004", 
                    "office_id": "4", 
                    "type": "local"
                  }, 
                  {
                    "status": "available", 
                    "area_code": "415", 
                    "company_id": "3", 
                    "number": "+14155551005", 
                    "office_id": "4", 
                    "type": "local"
                  }, 
                  {
                    "status": "available", 
                    "area_code": "415", 
                    "company_id": "3", 
                    "number": "+14155551006", 
                    "office_id": "4", 
                    "type": "local"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "numbers"
        ], 
        "description": "Gets all numbers in your company.", 
        "summary": "Get numbers"
      }
    }, 
    "/api/v2/numbers/{number}": {
      "delete": {
        "operationId": "NumberApi_unassignNumber", 
        "parameters": [
          {
            "in": "path", 
            "name": "number", 
            "required": true, 
            "type": "string", 
            "description": "A phone number (e164 format)."
          }, 
          {
            "in": "query", 
            "name": "release", 
            "type": "boolean", 
            "description": "Releases the number (does not return it to the company reserved pool if there is one)."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "available", 
                "area_code": "415", 
                "company_id": "3", 
                "number": "+14155551002", 
                "office_id": "4", 
                "type": "local"
              }
            }
          }
        }, 
        "tags": [
          "numbers"
        ], 
        "description": "Un-assigns a phone number from a target. The number will be returned to the company's reserved block if there is one. Otherwise the number will be released.", 
        "summary": "Un-assign number"
      }, 
      "get": {
        "operationId": "NumberApi_getNumber", 
        "parameters": [
          {
            "in": "path", 
            "name": "number", 
            "required": true, 
            "type": "string", 
            "description": "A phone number (e164 format)."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "available", 
                "area_code": "415", 
                "company_id": "3", 
                "number": "+14155551002", 
                "office_id": "4", 
                "type": "local"
              }
            }
          }
        }, 
        "tags": [
          "numbers"
        ], 
        "description": "Gets number details by number.", 
        "summary": "Get details by number"
      }
    }, 
    "/api/v2/offices": {
      "get": {
        "operationId": "OfficeApi_listOffices", 
        "parameters": [
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosOfficeOfficeCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "wednesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "routing_options": {
                      "open": {
                        "action_target_type": "department", 
                        "operator_routing": "simultaneous", 
                        "dtmf": [
                          {
                            "input": "1", 
                            "options": {
                              "action": "department", 
                              "action_target_id": "4", 
                              "action_target_type": "office"
                            }
                          }
                        ], 
                        "try_dial_operators": true, 
                        "action": "department", 
                        "action_target_id": "6"
                      }, 
                      "closed": {
                        "action": "voicemail", 
                        "try_dial_operators": false, 
                        "operator_routing": "simultaneous"
                      }
                    }, 
                    "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc", 
                    "first_action": "operators", 
                    "monday_hours": [
                      "08:00", 
                      "18:00"
                    ], 
                    "country": "us", 
                    "office_settings": {
                      "set_caller_id_disabled": false, 
                      "disable_desk_phone_self_provision": false, 
                      "disable_ivr_voicemail": false, 
                      "no_recording_message_on_user_calls": false, 
                      "block_caller_id_disabled": false, 
                      "bridged_target_recording_allowed": true, 
                      "allow_device_guest_login": false
                    }, 
                    "tuesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "friday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "state": "active", 
                    "no_operators_action": "voicemail", 
                    "thursday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "ring_seconds": "30", 
                    "phone_numbers": [
                      "+14155551000"
                    ], 
                    "saturday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "sunday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "id": "4", 
                    "office_id": "4"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets all the offices in your company.", 
        "summary": "Get offices"
      }
    }, 
    "/api/v2/offices/{id}": {
      "get": {
        "operationId": "OfficeApi_getOffice", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosOfficeOfficeProto"
            }, 
            "examples": {
              "application/json": {
                "wednesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "routing_options": {
                  "open": {
                    "action_target_type": "department", 
                    "operator_routing": "simultaneous", 
                    "dtmf": [
                      {
                        "input": "1", 
                        "options": {
                          "action": "department", 
                          "action_target_id": "4", 
                          "action_target_type": "office"
                        }
                      }
                    ], 
                    "try_dial_operators": true, 
                    "action": "department", 
                    "action_target_id": "6"
                  }, 
                  "closed": {
                    "action": "voicemail", 
                    "try_dial_operators": false, 
                    "operator_routing": "simultaneous"
                  }
                }, 
                "name": "\u30d5\u30a1\u30fc\u30b8\u30fc\u3000\u30dc\u30fc\u30eb, Inc", 
                "first_action": "operators", 
                "monday_hours": [
                  "08:00", 
                  "18:00"
                ], 
                "country": "us", 
                "office_settings": {
                  "set_caller_id_disabled": false, 
                  "disable_desk_phone_self_provision": false, 
                  "disable_ivr_voicemail": false, 
                  "no_recording_message_on_user_calls": false, 
                  "block_caller_id_disabled": false, 
                  "bridged_target_recording_allowed": true, 
                  "allow_device_guest_login": false
                }, 
                "tuesday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "friday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "state": "active", 
                "no_operators_action": "voicemail", 
                "thursday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "ring_seconds": "30", 
                "phone_numbers": [
                  "+14155551000"
                ], 
                "saturday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "sunday_hours": [
                  "00:00", 
                  "00:00"
                ], 
                "id": "4", 
                "office_id": "4"
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets an office by id.", 
        "summary": "Get office by id"
      }
    }, 
    "/api/v2/offices/{id}/assign_number": {
      "post": {
        "operationId": "NumberApi_assignNumberToOffice", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberAssignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "office", 
                "area_code": "604", 
                "target_id": "4", 
                "company_id": "3", 
                "number": "+16045551002", 
                "office_id": "4", 
                "type": "local", 
                "target_type": "office"
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Assigns a number to a office. The number will automatically be taken from the company's reserved block if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.", 
        "summary": "Assign number"
      }
    }, 
    "/api/v2/offices/{id}/operators": {
      "get": {
        "operationId": "OfficeApi_listOperators", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupOperatorCollection"
            }, 
            "examples": {
              "application/json": {
                "users": [
                  {
                    "admin_office_ids": [
                      "4"
                    ], 
                    "is_super_admin": true, 
                    "last_name": "Bot", 
                    "is_admin": true, 
                    "timezone": "US/Pacific", 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "id": "2", 
                    "first_name": "\u30c6\u00c9st", 
                    "forwarding_numbers": [
                      "+14152301358"
                    ], 
                    "office_id": "4", 
                    "muted": false, 
                    "company_id": "3", 
                    "state": "active", 
                    "location": "Mock Location", 
                    "status_message": "Mock Status", 
                    "job_title": "Mock Job Title", 
                    "is_available": true, 
                    "is_online": false, 
                    "emails": [
                      "bot@fuzz-ball.com"
                    ], 
                    "language": "en", 
                    "license": "talk", 
                    "country": "us", 
                    "do_not_disturb": false, 
                    "extension": "20000", 
                    "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                    "is_on_duty": false
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets mainline operators for an office.", 
        "summary": "Get operators"
      }
    }, 
    "/api/v2/offices/{id}/unassign_number": {
      "post": {
        "operationId": "NumberApi_unassignNumberFromOffice", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberUnassignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "deleted": true
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Un-assigns a phone number from a office mainline. The number will be returned to the company's reserved block if there is one. Otherwise the number will be released.", 
        "summary": "Un-assign number"
      }
    }, 
    "/api/v2/offices/{office_id}/callcenters": {
      "get": {
        "operationId": "CallCenterApi_listCallCenters", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "office_id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupGroupCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "routing_options": {
                      "open": {
                        "action_target_type": "department", 
                        "operator_routing": "longestidle", 
                        "dtmf": [
                          {
                            "input": "1", 
                            "options": {
                              "action": "department", 
                              "action_target_id": "4", 
                              "action_target_type": "office"
                            }
                          }
                        ], 
                        "try_dial_operators": true, 
                        "action": "department", 
                        "action_target_id": "6"
                      }, 
                      "closed": {
                        "action": "voicemail", 
                        "try_dial_operators": false, 
                        "operator_routing": "longestidle"
                      }
                    }, 
                    "name": "Test call center", 
                    "first_action": "operators", 
                    "monday_hours": [
                      "08:00", 
                      "18:00"
                    ], 
                    "country": "us", 
                    "wednesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "tuesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "friday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "state": "active", 
                    "no_operators_action": "voicemail", 
                    "thursday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "ring_seconds": "30", 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "saturday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "sunday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "id": "13", 
                    "office_id": "4"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets all the call centers for an office.", 
        "summary": "Get call centers"
      }
    }, 
    "/api/v2/offices/{office_id}/departments": {
      "get": {
        "operationId": "DepartmentApi_listDepartments", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "office_id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosGroupGroupCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "name": "Sales", 
                    "first_action": "operators", 
                    "monday_hours": [
                      "08:00", 
                      "18:00"
                    ], 
                    "country": "us", 
                    "wednesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "tuesday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "friday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "state": "active", 
                    "no_operators_action": "voicemail", 
                    "thursday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "ring_seconds": "30", 
                    "routing_options": {
                      "open": {
                        "action": "voicemail", 
                        "try_dial_operators": true, 
                        "operator_routing": "simultaneous"
                      }, 
                      "closed": {
                        "action": "voicemail", 
                        "try_dial_operators": false, 
                        "operator_routing": "simultaneous"
                      }
                    }, 
                    "saturday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "sunday_hours": [
                      "00:00", 
                      "00:00"
                    ], 
                    "id": "6", 
                    "office_id": "4"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets all the departments for an office.", 
        "summary": "Get departments"
      }
    }, 
    "/api/v2/offices/{office_id}/plan": {
      "get": {
        "operationId": "PlanApi_getPlan", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "office_id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosPlanPlanProto"
            }, 
            "examples": {
              "application/json": {
                "tollfree_group_lines": "0", 
                "user_lines": "99", 
                "group_lines": "0", 
                "fax_lines": "0", 
                "tollfree_room_lines": "0", 
                "room_lines": "5"
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Gets the plan for an office.", 
        "summary": "Get plan"
      }
    }, 
    "/api/v2/offices/{office_id}/plan/updateLicenses": {
      "post": {
        "operationId": "PlanApi_updateLicenses", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosPlanAdjustLicensesProto"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "office_id", 
            "required": true, 
            "type": "string", 
            "description": "The office's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosPlanPlanProto"
            }, 
            "examples": {
              "application/json": {
                "tollfree_group_lines": "0", 
                "user_lines": "0", 
                "group_lines": "0", 
                "fax_lines": "1", 
                "tollfree_room_lines": "0", 
                "room_lines": "0"
              }
            }
          }
        }, 
        "tags": [
          "offices"
        ], 
        "description": "Increments the license counts for the office plan.", 
        "summary": "Update licenses"
      }
    }, 
    "/api/v2/rooms": {
      "get": {
        "operationId": "RoomApi_listRooms", 
        "parameters": [
          {
            "format": "int64", 
            "in": "query", 
            "name": "office_id", 
            "type": "string", 
            "description": "The office's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomRoomCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "name": "Seaside", 
                    "country": "us", 
                    "company_id": "3", 
                    "is_free": false, 
                    "office_id": "4", 
                    "state": "active", 
                    "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                    "is_on_duty": false, 
                    "phone_numbers": [
                      "+14155551002"
                    ], 
                    "id": "13"
                  }, 
                  {
                    "name": "Boulevard", 
                    "country": "us", 
                    "company_id": "3", 
                    "is_free": false, 
                    "office_id": "4", 
                    "state": "active", 
                    "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                    "is_on_duty": false, 
                    "phone_numbers": [
                      "+14155551003"
                    ], 
                    "id": "15"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Gets all rooms in your company, optionally filtering by office.", 
        "summary": "Get rooms"
      }, 
      "post": {
        "operationId": "RoomApi_createRoom", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomCreateRoomMessage"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomRoomProto"
            }, 
            "examples": {
              "application/json": {
                "name": "Whistler", 
                "country": "us", 
                "company_id": "3", 
                "is_free": false, 
                "office_id": "4", 
                "state": "pending", 
                "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                "is_on_duty": false, 
                "id": "18"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Creates a new room.", 
        "summary": "Create room"
      }
    }, 
    "/api/v2/rooms/international_pin": {
      "post": {
        "operationId": "DeskPhoneApi_createInternationalPin", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomCreateInternationalPinProto"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomInternationalPinProto"
            }, 
            "examples": {
              "application/json": {
                "customer_ref": "something", 
                "pin": "47700", 
                "expires_on": "2020-01-28T21:13:27.626000"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "When PIN protected international calls are enabled for the company, a PIN is required to make international calls from room phones.", 
        "summary": "Request a PIN to make international calls from rooms"
      }
    }, 
    "/api/v2/rooms/{id}": {
      "delete": {
        "operationId": "RoomApi_deleteRoom", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomRoomProto"
            }, 
            "examples": {
              "application/json": {
                "name": "Blackcomb", 
                "country": "us", 
                "company_id": "3", 
                "is_free": false, 
                "office_id": "4", 
                "state": "pending", 
                "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                "is_on_duty": false, 
                "id": "18"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Deletes a room by id.", 
        "summary": "Delete room"
      }, 
      "get": {
        "operationId": "RoomApi_getRoom", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomRoomProto"
            }, 
            "examples": {
              "application/json": {
                "name": "Boulevard", 
                "country": "us", 
                "company_id": "3", 
                "is_free": false, 
                "office_id": "4", 
                "state": "active", 
                "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                "is_on_duty": false, 
                "phone_numbers": [
                  "+14155551003"
                ], 
                "id": "15"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Gets a room by id.", 
        "summary": "Get room by id"
      }, 
      "patch": {
        "operationId": "RoomApi_updateRoom", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomUpdateRoomMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosRoomRoomProto"
            }, 
            "examples": {
              "application/json": {
                "name": "Blackcomb", 
                "country": "us", 
                "company_id": "3", 
                "is_free": false, 
                "office_id": "4", 
                "state": "pending", 
                "image_url": "http://testbed.example.com/avatar/static/avatar_room_contact.png?version=2", 
                "is_on_duty": false, 
                "id": "18"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Updates room details by id.", 
        "summary": "Update room"
      }
    }, 
    "/api/v2/rooms/{id}/assign_number": {
      "post": {
        "operationId": "NumberApi_assignNumberToRoom", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberAssignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "room", 
                "area_code": "604", 
                "target_id": "15", 
                "company_id": "3", 
                "number": "+16045551004", 
                "office_id": "4", 
                "type": "local", 
                "target_type": "room"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Assigns a number to a room. The number will automatically be taken from the company's reserved block if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.", 
        "summary": "Assign number"
      }
    }, 
    "/api/v2/rooms/{id}/unassign_number": {
      "post": {
        "operationId": "NumberApi_unassignNumberFromRoom", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberUnassignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "room", 
                "area_code": "604", 
                "target_id": "15", 
                "company_id": "3", 
                "number": "+16045551004", 
                "office_id": "4", 
                "type": "local", 
                "target_type": "room"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Un-assigns a phone number from a room. The number will be returned to the company's reserved block if there is one. Otherwise the number will be released.", 
        "summary": "Un-assign number"
      }
    }, 
    "/api/v2/rooms/{parent_id}/deskphones": {
      "get": {
        "operationId": "DeskPhoneApi_listRoomDeskphones", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhoneCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "realm": "uvstaging.ubervoip.net", 
                    "name": "Test Obihai", 
                    "port": "7060", 
                    "ring_notification": true, 
                    "byod": false, 
                    "mac_address": "9cadefa00096", 
                    "owner_type": "room", 
                    "type": "obi", 
                    "id": "+14155551002-room-13-obi-hex_ce3e13a487", 
                    "owner_id": "13"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Gets all desk phones under a room.", 
        "summary": "Gets desk phones under a room"
      }, 
      "post": {
        "operationId": "DeskPhoneApi_createRoomDeskphone", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneCreateDeskPhone"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhone"
            }, 
            "examples": {
              "application/json": {
                "realm": "uvstaging.ubervoip.net", 
                "name": "Test Obihai", 
                "port": "7060", 
                "ring_notification": true, 
                "byod": false, 
                "mac_address": "9cadefa00096", 
                "owner_type": "room", 
                "type": "obi", 
                "id": "+14155551002-room-13-obi-hex_ce3e13a487", 
                "owner_id": "13"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Creates a desk phone under a room.", 
        "summary": "Create room desk phone"
      }
    }, 
    "/api/v2/rooms/{parent_id}/deskphones/{id}": {
      "delete": {
        "operationId": "DeskPhoneApi_deleteRoomDeskphone", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }, 
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The desk phone's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response"
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Deletes a room desk phone by id.", 
        "summary": "Kill desk phone by id"
      }, 
      "get": {
        "operationId": "DeskPhoneApi_getRoomDeskphone", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The room's id."
          }, 
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The desk phone's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhone"
            }, 
            "examples": {
              "application/json": {
                "realm": "uvstaging.ubervoip.net", 
                "name": "Test Obihai", 
                "port": "7060", 
                "ring_notification": true, 
                "byod": false, 
                "mac_address": "9cadefa00096", 
                "owner_type": "room", 
                "type": "obi", 
                "id": "+14155551002-room-13-obi-hex_ce3e13a487", 
                "owner_id": "13"
              }
            }
          }
        }, 
        "tags": [
          "rooms"
        ], 
        "description": "Gets a room desk phone by id.", 
        "summary": "Get desk phone by id"
      }
    }, 
    "/api/v2/sms": {
      "post": {
        "operationId": "SMSApi_sendSms", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosSmsSendSMSMessage"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosSmsSMSProto"
            }, 
            "examples": {
              "application/json": {
                "message_status": "pending", 
                "direction": "outbound", 
                "user_id": "2", 
                "text": "Test text", 
                "target_id": "2", 
                "target_type": "user", 
                "contact_id": "http://www.google.com/m8/feeds/contacts/bot@fuzz-ball.com/base/ec0e7a0954", 
                "from_number": "+14155551001", 
                "to_numbers": [
                  "+14155557777"
                ], 
                "created_date": "2020-01-28T20:42:10.453736", 
                "id": "14"
              }
            }
          }
        }, 
        "tags": [
          "sms"
        ], 
        "description": "Send an SMS message.", 
        "summary": "Sends an SMS message to a phone number on behalf of a user."
      }
    }, 
    "/api/v2/stats": {
      "post": {
        "operationId": "StatsApi_processStats", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosStatsProcessStatsMessage"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosStatsProcessingProto"
            }, 
            "examples": {
              "application/json": {
                "request_id": "b70dbeaf-9a42-4421-8285-69775c7019e5"
              }
            }
          }
        }, 
        "tags": [
          "stats"
        ], 
        "description": "Begins processing statistics asynchronously, returning a request id to get the status and result of the result. The results should be queried by calling GET /stats/{request_id}. Stats for the whole company will be processed by default. An office_id can be provided to limit stats to a single office. A target_id and target_type can be provided to limit stats to a single target.", 
        "summary": "Process statistics"
      }
    }, 
    "/api/v2/stats/{id}": {
      "get": {
        "operationId": "StatsApi_getStats", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "Request ID returned by a POST /stats request."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosStatsStatsProto"
            }, 
            "examples": {
              "application/json": {
                "status": "processing"
              }
            }
          }
        }, 
        "tags": [
          "stats"
        ], 
        "description": "Gets the progress and result of a statistics request.", 
        "summary": "Get statistics results"
      }
    }, 
    "/api/v2/transcripts/{call_id}": {
      "get": {
        "operationId": "TranscriptApi_getTranscript", 
        "parameters": [
          {
            "in": "path", 
            "name": "call_id", 
            "required": true, 
            "type": "string", 
            "description": "The call's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosTranscriptTranscriptProto"
            }, 
            "examples": {
              "application/json": {
                "lines": [
                  {
                    "content": "hello", 
                    "user_id": "2", 
                    "type": "transcript", 
                    "name": "\u30c6\u00c9st Bot", 
                    "time": "2018-05-08T21:33:15.300000"
                  }, 
                  {
                    "content": "price_inquiry", 
                    "user_id": "2", 
                    "type": "moment", 
                    "name": "\u30c6\u00c9st Bot", 
                    "time": "2018-05-08T21:33:17.300000"
                  }, 
                  {
                    "content": "hi", 
                    "type": "transcript", 
                    "name": "(415) 555-6666", 
                    "contact_id": "ag5kZXZ-dWJlci12b2ljZXJWCxIHQ29udGFjdCJJaHR0cDovL3d3dy5nb29nbGUuY29tL204L2ZlZWRzL2NvbnRhY3RzL2JvdEBmdXp6LWJhbGwuY29tL2Jhc2UvMGQzOWI5M2E4MQw", 
                    "time": "2018-05-08T21:33:19.300000"
                  }
                ], 
                "call_id": "13"
              }
            }
          }
        }, 
        "tags": [
          "transcripts"
        ], 
        "description": "Get the transcript of a call.", 
        "summary": "Get the transcript of a call"
      }
    }, 
    "/api/v2/userdevices": {
      "get": {
        "operationId": "UserDeviceApi_listUserDevices", 
        "parameters": [
          {
            "format": "int64", 
            "in": "query", 
            "name": "user_id", 
            "type": "string", 
            "description": "The user's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserdeviceUserDeviceCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "user_id": "2", 
                    "date_updated": "2020-02-07T00:34:30.062000", 
                    "date_created": "2020-02-07T00:34:30.055000", 
                    "type": "native", 
                    "id": "+14155551001-user-2-client-native", 
                    "display_name": "native"
                  }, 
                  {
                    "user_id": "2", 
                    "date_updated": "2020-02-07T00:34:25.420000", 
                    "date_created": "2020-02-07T00:34:25.412000", 
                    "type": "packaged_app", 
                    "id": "+14155551001-user-2-client-packagedappid", 
                    "display_name": "packagedappid"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "userdevices"
        ], 
        "description": "List the devices for a specific user.", 
        "summary": "List the devices for a specific user"
      }
    }, 
    "/api/v2/userdevices/{id}": {
      "get": {
        "operationId": "UserDeviceApi_getDevice", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserdeviceUserDeviceProto"
            }, 
            "examples": {
              "application/json": {
                "user_id": "2", 
                "date_updated": "2020-02-07T00:34:27.829000", 
                "date_created": "2020-02-07T00:34:27.822000", 
                "type": "native", 
                "id": "+14155551001-user-2-client-native", 
                "display_name": "native"
              }
            }
          }
        }, 
        "tags": [
          "userdevices"
        ]
      }
    }, 
    "/api/v2/users": {
      "get": {
        "operationId": "UserApi_listUsers", 
        "parameters": [
          {
            "in": "query", 
            "name": "email", 
            "type": "string", 
            "description": "The user's email."
          }, 
          {
            "default": "active", 
            "enum": [
              "active", 
              "cancelled", 
              "suspended", 
              "pending", 
              "deleted", 
              "all"
            ], 
            "in": "query", 
            "name": "state", 
            "type": "string"
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUserCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "admin_office_ids": [
                      "4"
                    ], 
                    "is_super_admin": true, 
                    "last_name": "Bot", 
                    "is_admin": true, 
                    "timezone": "US/Pacific", 
                    "phone_numbers": [
                      "+14155551001"
                    ], 
                    "id": "2", 
                    "first_name": "\u30c6\u00c9st", 
                    "forwarding_numbers": [
                      "+14152301358"
                    ], 
                    "office_id": "4", 
                    "muted": false, 
                    "company_id": "3", 
                    "state": "active", 
                    "location": "Mock Location", 
                    "status_message": "Mock Status", 
                    "job_title": "Mock Job Title", 
                    "is_available": true, 
                    "is_online": false, 
                    "emails": [
                      "bot@fuzz-ball.com"
                    ], 
                    "language": "en", 
                    "license": "talk", 
                    "country": "us", 
                    "do_not_disturb": false, 
                    "extension": "20000", 
                    "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                    "is_on_duty": false
                  }, 
                  {
                    "admin_office_ids": [
                      "4"
                    ], 
                    "is_super_admin": false, 
                    "last_name": "Bot", 
                    "is_admin": true, 
                    "timezone": "US/Pacific", 
                    "phone_numbers": [
                      "+14155551002"
                    ], 
                    "id": "13", 
                    "first_name": "\u30c6\u00c9st", 
                    "forwarding_numbers": [
                      "+14152301358"
                    ], 
                    "office_id": "4", 
                    "muted": false, 
                    "company_id": "3", 
                    "state": "active", 
                    "location": "Mock Location", 
                    "status_message": "Mock Status", 
                    "job_title": "Mock Job Title", 
                    "is_available": true, 
                    "is_online": false, 
                    "emails": [
                      "test_contact@fuzz-ball.com"
                    ], 
                    "language": "en", 
                    "license": "talk", 
                    "country": "us", 
                    "do_not_disturb": false, 
                    "extension": "13000", 
                    "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYDQw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                    "is_on_duty": false
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Gets company users, optionally filtering by email.", 
        "summary": "List users"
      }, 
      "post": {
        "operationId": "UserApi_createUser", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosUserCreateUserMessage"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUserProto"
            }, 
            "examples": {
              "application/json": {
                "first_name": "Mocky", 
                "admin_office_ids": [
                  "4"
                ], 
                "license": "talk", 
                "language": "en", 
                "muted": false, 
                "country": "us", 
                "do_not_disturb": false, 
                "company_id": "3", 
                "is_super_admin": false, 
                "id": "13", 
                "timezone": "US/Pacific", 
                "office_id": "4", 
                "state": "active", 
                "last_name": "Mockson", 
                "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYDQw.png?version=caaf49b4dbcec738c3b8fd1189746b89", 
                "is_on_duty": false, 
                "is_available": true, 
                "is_admin": false, 
                "emails": [
                  "mocky@fuzz-ball.com"
                ], 
                "is_online": false
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Creates a new user.", 
        "summary": "Create user"
      }
    }, 
    "/api/v2/users/{id}": {
      "delete": {
        "operationId": "UserApi_deleteUser", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUserProto"
            }, 
            "examples": {
              "application/json": {
                "admin_office_ids": [
                  "14"
                ], 
                "is_super_admin": true, 
                "last_name": "Mockson", 
                "is_admin": true, 
                "timezone": "US/Pacific", 
                "phone_numbers": [
                  "+14155551001"
                ], 
                "id": "2", 
                "first_name": "Blocky", 
                "forwarding_numbers": [
                  "+815058098764", 
                  "+442074865800"
                ], 
                "office_id": "14", 
                "muted": false, 
                "company_id": "3", 
                "state": "deleted", 
                "location": "Mock Location", 
                "status_message": "Mock Status", 
                "job_title": "Junior Accountant", 
                "is_available": false, 
                "is_online": false, 
                "emails": [
                  "bot@fuzz-ball.com"
                ], 
                "language": "en", 
                "license": "lite_support_agents", 
                "country": "us", 
                "do_not_disturb": true, 
                "extension": "12345", 
                "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=a54c75379069406d7958461d98788fb4", 
                "is_on_duty": false
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Deletes a user by id.", 
        "summary": "Delete user by id"
      }, 
      "get": {
        "operationId": "UserApi_getUser", 
        "parameters": [
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUserProto"
            }, 
            "examples": {
              "application/json": {
                "admin_office_ids": [
                  "4"
                ], 
                "is_super_admin": true, 
                "last_name": "Bot", 
                "is_admin": true, 
                "timezone": "US/Pacific", 
                "phone_numbers": [
                  "+14155551001"
                ], 
                "id": "2", 
                "first_name": "\u30c6\u00c9st", 
                "forwarding_numbers": [
                  "+14152301358"
                ], 
                "office_id": "4", 
                "muted": false, 
                "company_id": "3", 
                "state": "active", 
                "location": "Mock Location", 
                "status_message": "Mock Status", 
                "job_title": "Mock Job Title", 
                "is_available": true, 
                "is_online": false, 
                "emails": [
                  "bot@fuzz-ball.com"
                ], 
                "language": "en", 
                "license": "talk", 
                "country": "us", 
                "do_not_disturb": false, 
                "extension": "20000", 
                "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=36c0561fb8e0f5765ccfb3a5316f6d5d", 
                "is_on_duty": false
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Gets a user by id.", 
        "summary": "Get user by id"
      }, 
      "patch": {
        "operationId": "UserApi_updateUser", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUpdateUserMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosUserUserProto"
            }, 
            "examples": {
              "application/json": {
                "admin_office_ids": [
                  "14"
                ], 
                "is_super_admin": true, 
                "last_name": "Mockson", 
                "is_admin": true, 
                "timezone": "US/Pacific", 
                "phone_numbers": [
                  "+14155551001"
                ], 
                "id": "2", 
                "first_name": "Blocky", 
                "forwarding_numbers": [
                  "+815058098764", 
                  "+442074865800"
                ], 
                "office_id": "14", 
                "muted": false, 
                "company_id": "3", 
                "state": "active", 
                "location": "Mock Location", 
                "status_message": "Mock Status", 
                "job_title": "Junior Accountant", 
                "is_available": true, 
                "is_online": false, 
                "emails": [
                  "bot@fuzz-ball.com"
                ], 
                "language": "en", 
                "license": "lite_support_agents", 
                "country": "us", 
                "do_not_disturb": false, 
                "extension": "12345", 
                "image_url": "http://testbed.example.com/avatar/user/ag5kZXZ-dWJlci12b2ljZXIRCxILVXNlclByb2ZpbGUYAgw.png?version=a54c75379069406d7958461d98788fb4", 
                "is_on_duty": false
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Updates the provided fields for an existing user.", 
        "summary": "Update user"
      }
    }, 
    "/api/v2/users/{id}/activecall": {
      "patch": {
        "operationId": "CallApi_updateActiveCall", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosCallUpdateActiveCallMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallActiveCallProto"
            }, 
            "examples": {
              "application/json": {
                "call_state": "connected", 
                "is_recording": true, 
                "id": "13"
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Turn call recording on or off for a user's active call.", 
        "summary": "Toggle live call recording"
      }
    }, 
    "/api/v2/users/{id}/assign_number": {
      "post": {
        "operationId": "NumberApi_assignNumberToUser", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberAssignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "status": "user", 
                "area_code": "111", 
                "target_id": "2", 
                "company_id": "3", 
                "number": "+8031112223302", 
                "office_id": "14", 
                "type": "free", 
                "target_type": "user"
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Assigns a number to a user. The number will automatically be taken from the company's reserved block if there are reserved numbers, otherwise a number will be auto-assigned from the provided area code.", 
        "summary": "Assign number"
      }
    }, 
    "/api/v2/users/{id}/initiate_call": {
      "post": {
        "operationId": "CallApi_initiateCall", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosCallInitiateCallMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosCallInitiatedCallProto"
            }, 
            "examples": {
              "application/json": {
                "device": {
                  "id": "+14155551001-user-2-client-packagedappid"
                }
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Causes a user's native Dialpad application to initiate an outbound call.", 
        "summary": "Initiate oubound call"
      }
    }, 
    "/api/v2/users/{id}/unassign_number": {
      "post": {
        "operationId": "NumberApi_unassignNumberFromUser", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberUnassignNumberMessage"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosNumberNumberProto"
            }, 
            "examples": {
              "application/json": {
                "deleted": true
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Un-assigns a phone number from a user. The number will be returned to the company's reserved block if there is one. Otherwise the number will be released.", 
        "summary": "Un-assign number"
      }
    }, 
    "/api/v2/users/{parent_id}/deskphones": {
      "get": {
        "operationId": "DeskPhoneApi_listUserDeskphones", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }, 
          {
            "format": "int64", 
            "in": "query", 
            "name": "limit", 
            "type": "string", 
            "description": "The maximum number of results to return."
          }, 
          {
            "in": "query", 
            "name": "cursor", 
            "type": "string", 
            "description": "A token used to return the next page of a previous request. Use the cursor provided in the previous response."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhoneCollection"
            }, 
            "examples": {
              "application/json": {
                "items": [
                  {
                    "realm": "uvstaging.ubervoip.net", 
                    "name": "Test Obihai", 
                    "port": "7060", 
                    "ring_notification": true, 
                    "byod": false, 
                    "mac_address": "9cadefa00096", 
                    "owner_type": "user", 
                    "sip_transport_type": "tls", 
                    "type": "obi", 
                    "id": "+14155551001-user-2-obi-hex_8a5da52ed1", 
                    "owner_id": "2"
                  }
                ]
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Gets all desk phones under a user.", 
        "summary": "Gets desk phones under a user"
      }, 
      "post": {
        "operationId": "DeskPhoneApi_createUserDeskphone", 
        "parameters": [
          {
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneCreateDeskPhone"
            }
          }, 
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhone"
            }, 
            "examples": {
              "application/json": {
                "realm": "uvstaging.ubervoip.net", 
                "name": "Test Obihai", 
                "port": "7060", 
                "ring_notification": true, 
                "byod": false, 
                "mac_address": "9cadefa00096", 
                "owner_type": "user", 
                "sip_transport_type": "tls", 
                "type": "obi", 
                "id": "+14155551001-user-2-obi-hex_8a5da52ed1", 
                "owner_id": "2"
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Creates a desk phone under a user.", 
        "summary": "Create user desk phone"
      }
    }, 
    "/api/v2/users/{parent_id}/deskphones/{id}": {
      "delete": {
        "operationId": "DeskPhoneApi_deleteUserDeskphone", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }, 
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The desk phone's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response"
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Deletes a user desk phone by id.", 
        "summary": "Kill desk phone by id"
      }, 
      "get": {
        "operationId": "DeskPhoneApi_getUserDeskphone", 
        "parameters": [
          {
            "format": "int64", 
            "in": "path", 
            "name": "parent_id", 
            "required": true, 
            "type": "string", 
            "description": "The user's id."
          }, 
          {
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string", 
            "description": "The desk phone's id."
          }
        ], 
        "responses": {
          "200": {
            "description": "A successful response", 
            "schema": {
              "$ref": "#/definitions/ProtosDeskphoneDeskPhone"
            }, 
            "examples": {
              "application/json": {
                "realm": "uvstaging.ubervoip.net", 
                "name": "Test Obihai", 
                "port": "7060", 
                "ring_notification": true, 
                "byod": false, 
                "mac_address": "9cadefa00096", 
                "owner_type": "user", 
                "sip_transport_type": "tls", 
                "type": "obi", 
                "id": "+14155551001-user-2-obi-hex_8a5da52ed1", 
                "owner_id": "2"
              }
            }
          }
        }, 
        "tags": [
          "users"
        ], 
        "description": "Gets a user desk phone by id.", 
        "summary": "Get desk phone by id"
      }
    }
  }, 
  "produces": [
    "application/json"
  ], 
  "schemes": [
    "https"
  ], 
  "securityDefinitions": {
    "bearer_token": {
      "description": "The API key can be put in the Authorization header.\n\ni.e. Authorization: Bearer <api_key>\n", 
      "type": "apiKey", 
      "name": "Authorization", 
      "in": "header"
    }, 
    "api_key_in_url": {
      "description": "The API key can be put in the URL parameters.\n\ni.e. ?apikey=<api_key>\n", 
      "type": "apiKey", 
      "name": "apikey", 
      "in": "query"
    }
  }, 
  "swagger": "2.0", 
  "security": [
    {
      "bearer_token": []
    }, 
    {
      "api_key_in_url": []
    }
  ]
}